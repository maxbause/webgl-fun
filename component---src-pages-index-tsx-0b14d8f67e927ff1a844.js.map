{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/image.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/toc.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","IndexPage","a","createElement","title","keywords","href","target","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Image","react_default","gatsby_browser_entry","gatsby_image_default","fluid","placeholderImage","childImageSharp","_1093581123","Header","siteTitle","style","background","marginBottom","display","justifyContent","alignItems","margin","maxWidth","padding","to","color","textDecoration","width","components_image","TOC","Fragment","className","Layout","header","paddingTop","toc","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-pages-index-tsx-0b14d8f67e927ff1a844.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[\"gatsby\", \"application\", \"react\", \"webgl\", \"programming\"]} />\n    <h1>Hey guys ðŸ‘‹</h1>\n    <p>This is my <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API\" target=\"_blank\">WebGL</a> playground, feel free to explore!</p>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: \"description\",\n          content: metaDescription,\n        },\n        {\n          property: \"og:title\",\n          content: title,\n        },\n        {\n          property: \"og:description\",\n          content: metaDescription,\n        },\n        {\n          property: \"og:type\",\n          content: \"website\",\n        },\n        {\n          name: \"twitter:card\",\n          content: \"summary\",\n        },\n        {\n          name: \"twitter:creator\",\n          content: site.siteMetadata.author,\n        },\n        {\n          name: \"twitter:title\",\n          content: title,\n        },\n        {\n          name: \"twitter:description\",\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: \"keywords\",\n                content: keywords.join(\", \"),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: \"en\",\n  meta: [],\n  keywords: [],\n  description: \"\",\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using \"gatsby-image\" to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * \"StaticQuery\", which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - \"gatsby-image\": https://gatsby.dev/gatsby-image\n * - \"StaticQuery\": https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"git-hub-mark-light-64px.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from \"./image\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: \"rebeccapurple\",\n      marginBottom: \"1.45rem\",\n    }}\n  >\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        margin: \"0 auto\",\n        maxWidth: 960,\n        padding: \"1.45rem 1.0875rem\",\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: \"white\",\n            textDecoration: \"none\",\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div style={{ width: \"32px\" }}>\n        <a href=\"https://github.com/maxbause\" target=\"_blank\">\n          <Image />\n        </a>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: \"\",\n}\n\nexport default Header\n","import React from \"react\";\nimport { Link } from \"gatsby\"\n\nconst TOC = () => (\n  <>\n  <h3>Table of contents:</h3>\n  <ul className=\"uk-list uk-list-bullet\">\n    <li><Link to=\"basic-renderer\">Basic renderer</Link></li>\n  </ul>\n  </>\n);\n\nexport default TOC;","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport TOC from \"./toc\";\n\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: \"0 auto\",\n            maxWidth: 960,\n            padding: \"0px 1.0875rem 1.45rem\",\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <TOC />\n          <footer>\n            Â© {new Date().getFullYear()} <a href=\"https://github.com/maxbause\">Max Bause</a>, Built with\n            {\" \"}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}